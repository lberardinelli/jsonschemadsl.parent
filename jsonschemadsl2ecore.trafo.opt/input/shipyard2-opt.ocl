-- OCL contraints for /Users/Alessandro.colantoni/eclipse-lowcomote-jsonschema-workspace/jsonschemadsl.parent/jsonschemadsl2ecore.trafo.opt/input/shipyard2
import 'http://jku.bise.at/shipyard2'

package shipyard2   
     
	context shipyard2::Metadata 

	inv MetadataRequiredname ('Metadata requires the property name'):
	if  self.Metadata->select(p|p.oclType()=shipyard2::MetadataName)->size()>0
	then true
	else null
	endif

	context shipyard2::Selector 

	inv SelectorRequiredmatch ('Selector requires the property match'):
	if  self.Selector->select(p|p.oclType()=shipyard2::SelectorMatch)->size()>0
	then true
	else null
	endif

	context shipyard2::Sequence 

	inv SequenceRequiredname ('Sequence requires the property name'):
	if  self._Sequence->select(p|p.oclType()=shipyard2::SequenceName)->size()>0
	then true
	else null
	endif

	context shipyard2::Sequence 

	inv SequenceRequiredtasks ('Sequence requires the property tasks'):
	if  self._Sequence->select(p|p.oclType()=shipyard2::SequenceTasks)->size()>0
	then true
	else null
	endif

	context shipyard2::Shipyard 

	inv ShipyardRequiredapiVersion ('Shipyard requires the property apiVersion'):
	if  self.Shipyard->select(p|p.oclType()=shipyard2::ShipyardApiVersion)->size()>0
	then true
	else null
	endif

	context shipyard2::Shipyard 

	inv ShipyardRequiredkind ('Shipyard requires the property kind'):
	if  self.Shipyard->select(p|p.oclType()=shipyard2::ShipyardKind)->size()>0
	then true
	else null
	endif

	context shipyard2::Shipyard 

	inv ShipyardRequiredmetadata ('Shipyard requires the property metadata'):
	if  self.Shipyard->select(p|p.oclType()=shipyard2::ShipyardMetadata)->size()>0
	then true
	else null
	endif

	context shipyard2::Shipyard 

	inv ShipyardRequiredspec ('Shipyard requires the property spec'):
	if  self.Shipyard->select(p|p.oclType()=shipyard2::ShipyardSpec1)->size()>0
	then true
	else null
	endif

	context shipyard2::ShipyardSpec 

	inv ShipyardSpecRequiredstages ('ShipyardSpec requires the property stages'):
	if  self.ShipyardSpec->select(p|p.oclType()=shipyard2::ShipyardSpecStages)->size()>0
	then true
	else null
	endif

	context shipyard2::Stage 

	inv StageRequiredname ('Stage requires the property name'):
	if  self.Stage->select(p|p.oclType()=shipyard2::StageName)->size()>0
	then true
	else null
	endif

	context shipyard2::Stage 

	inv StageRequiredsequences ('Stage requires the property sequences'):
	if  self.Stage->select(p|p.oclType()=shipyard2::StageSequences)->size()>0
	then true
	else null
	endif

	context shipyard2::Task 

	inv TaskRequiredname ('Task requires the property name'):
	if  self.Task->select(p|p.oclType()=shipyard2::TaskName)->size()>0
	then true
	else null
	endif

	context shipyard2::Task 

	inv TaskRequiredproperties ('Task requires the property properties'):
	if  self.Task->select(p|p.oclType()=shipyard2::TaskProperties)->size()>0
	then true
	else null
	endif

	context shipyard2::Trigger 

	inv TriggerRequiredevent ('Trigger requires the property event'):
	if  self.Trigger->select(p|p.oclType()=shipyard2::TriggerEvent)->size()>0
	then true
	else null
	endif

endpackage

