<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/jsonmetaschemaMM/src-gen" modelPluginID="jsonmetaschemaMM"
    modelName="JsonMetaschemaMM" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    importerID="org.eclipse.emf.importer.ecore" complianceLevel="11.0" copyrightFields="false"
    operationReflection="true" importOrganizing="true">
  <foreignModel>jsonMetaschemaMM.ecore</foreignModel>
  <genPackages prefix="JsonMetaschemaMM" disposableProviderFactory="true" ecorePackage="jsonMetaschemaMM.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="jsonMetaschemaMM.ecore#//SimpleTypes">
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/array"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/boolean"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/integer"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/null"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/number"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/object"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/string"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="jsonMetaschemaMM.ecore#//NullEnum">
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//NullEnum/null"/>
    </genEnums>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ObjectSchema">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/keywordDefinition"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/additionalItems"
          suppressedGetVisibility="false" suppressedSetVisibility="true" suppressedIsSetVisibility="true"
          suppressedUnsetVisibility="true" get="return (AdditionalItemsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AdditionalItemsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/items"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ItemsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ItemsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/additionalProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AdditionalPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AdditionalPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/contains"
          suppressedGetVisibility="false" suppressedSetVisibility="true" suppressedIsSetVisibility="true"
          suppressedUnsetVisibility="true" get="return (ContainsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ContainsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/properties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/definitions"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (DefinitionsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof DefinitionsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/patternProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PatternPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PatternPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/dependencies"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (DependenciesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof DependenciesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/propertyNames"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PropertyNamesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PropertyNamesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/if"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (IfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof IfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/then"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ThenSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ThenSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/else"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ElseSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ElseSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/allOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AllOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AllOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/anyOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AnyOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AnyOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/oneOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (OneOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof OneOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/not"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (NotSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof NotSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/schemaObjectAdditionalProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return new org.eclipse.emf.common.util.BasicEList&lt;SchemaObjectAdditionalProperties>((Collection&lt;? extends SchemaObjectAdditionalProperties>) getKeywordDefinition().stream().filter(kd -> kd instanceof SchemaObjectAdditionalProperties).collect(java.util.stream.Collectors.toList()))  ;"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByKey"
          body="return getSchemaObjectAdditionalProperties().stream().filter(s -> s.getKey() == key ).findFirst().map(SchemaObjectAdditionalProperties::getAdditionalProperties).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByKey/key"/>
      </genOperations>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer"
          body="Schema schema = null;&#xA;if(currentIndex==jsonPointer.size()) {&#xA;&#x9;schema=this;&#xA;}else if(0 &lt;= currentIndex &amp;&amp; currentIndex &lt; jsonPointer.size()) {&#xA;&#x9;String currentToken = jsonPointer.get(currentIndex);&#xA;&#x9;Integer nextIndex= currentIndex +1;&#xA;&#x9;Schema nextSchema = null;&#xA;&#x9;if(&quot;additionalItems&quot;== currentToken) {&#xA;&#x9;&#x9;nextSchema = getAdditionalItems().getAdditionalItems();&#xA;&#x9;}else if (&quot;additionalProperties&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getAdditionalProperties().getAdditionalProperties();&#xA;&#x9;}else if (&quot;contains&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getContains().getContains();&#xA;&#x9;}else if (&quot;definitions&quot; == currentToken) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getDefinitions().findSchemaByKey(jsonPointer.get(nextIndex));&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;properties&quot; == currentToken) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getProperties().findSchemaByKey(jsonPointer.get(nextIndex));&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;patternProperties&quot; == currentToken) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getPatternProperties().findSchemaByKey(jsonPointer.get(nextIndex));&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;dependencies&quot; == currentToken) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getDependencies().findSchemaByKey(jsonPointer.get(nextIndex));&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;propertyNames&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getPropertyNames().getPropertyNames();&#xA;&#x9;}else if (&quot;if&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getIf().getIf();&#xA;&#x9;}else if (&quot;then&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getThen().getThen();&#xA;&#x9;}else if (&quot;else&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getElse().getElse();&#xA;&#x9;}else if (&quot;allOf&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getAllOf().getAllOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}else if (&quot;anyOf&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getAnyOf().getAnyOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}else if (&quot;oneOf&quot; == currentToken) {&#xA;&#x9;&#x9;nextSchema = getOneOf().getOneOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;if(nextSchema!=null) {&#xA;&#x9;&#x9;schema = nextSchema.findSchemaByJsonPointer(jsonPointer, nextIndex);&#xA;&#x9;}&#xA;}&#xA;return schema;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaximumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MaximumSchemaDefinition/maximum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//IntegerValue">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//IntegerValue/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//WriteOnlySchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//WriteOnlySchemaDefinition/writeOnly"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//CommentSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//CommentSchemaDefinition/comment"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//EnumSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//EnumSchemaDefinition/items"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//UniqueItemsSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//UniqueItemsSchemaDefinition/uniqueItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AnyOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AnyOfSchemaDefinition/anyOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//StringArray">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//StringArray/values"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TitleSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TitleSchemaDefinition/title"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ItemsSchemaDefinition/itemsAnyOf1"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ItemsSchemaDefinition/itemsAnyOf2"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DefaultSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DefaultSchemaDefinition/default"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ThenSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ThenSchemaDefinition/then"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinLengthSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinLengthSchemaDefinition/minLength"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> ksp.getKey()==key).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//BooleanValue">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//BooleanValue/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinItemsSchemaDefinition/minItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//OneOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//OneOfSchemaDefinition/oneOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaArray">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaArray/items"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//SchemaArray/findSchemaByIndex"
          body="Schema schema =null;&#xA;if(0 &lt;= index &amp;&amp; index &lt; getItems().size()) {&#xA;&#x9;schema = getItems().get(index);&#xA;}&#xA;return schema;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//SchemaArray/findSchemaByIndex/index"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxPropertiesSchemaDefinition/maxProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NullValue">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NullValue/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinimumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MinimumSchemaDefinition/minimum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//StringValue">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//StringValue/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//JsonDocument">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//JsonDocument/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxItemsSchemaDefinition/maxItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//FormatSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//FormatSchemaDefinition/format"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ReadOnlySchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ReadOnlySchemaDefinition/readOnly"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//Schema">
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ObjectValue">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectValue/keyvaluepair"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TypeSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TypeSchemaDefinition/typeAnyOf1"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//TypeSchemaDefinition/typesAnyOf2"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AdditionalPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AdditionalPropertiesSchemaDefinition/additionalProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ElseSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ElseSchemaDefinition/else"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//IdSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//IdSchemaDefinition/id"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ConstSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ConstSchemaDefinition/const"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/properties"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/findSchemaByKey"
          body="Schema schema = null; &#xA;jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties schemaObjectDependenciesAdditionalProperties = (jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties) getProperties().stream().filter(p -> p instanceof jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties &amp;&amp; ((jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties)p).getKey()==key).findFirst().orElse(null);&#xA;if(schemaObjectDependenciesAdditionalProperties!=null ) {&#xA;&#x9;jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf additionalPropertiesAnyOf= schemaObjectDependenciesAdditionalProperties.getAdditionalProperties();&#xA;&#x9;if(additionalPropertiesAnyOf instanceof jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1) {&#xA;&#x9;&#x9;schema = ((jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1)additionalPropertiesAnyOf).getAnyOf1();&#xA;&#x9;}&#xA;}&#xA;return schema;&#xA;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NumberValue">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NumberValue/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//RequiredSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//RequiredSchemaDefinition/required"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DescriptionSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//DescriptionSchemaDefinition/description"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinPropertiesSchemaDefinition/minProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> ksp.getKey()==key).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AdditionalItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AdditionalItemsSchemaDefinition/additionalItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//KeyValuePair">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//KeyValuePair/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//KeyValuePair/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExamplesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ExamplesSchemaDefinition/examples"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//IfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//IfSchemaDefinition/if"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AllOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AllOfSchemaDefinition/allOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContentEncodingSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ContentEncodingSchemaDefinition/contentEncoding"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MultipleOfSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MultipleOfSchemaDefinition/multipleOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PatternSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//PatternSchemaDefinition/pattern"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//KeywordDefinition"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContainsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ContainsSchemaDefinition/contains"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NotSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//NotSchemaDefinition/not"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExclusiveMaximumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ExclusiveMaximumSchemaDefinition/exclusiveMaximum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxLengthSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxLengthSchemaDefinition/maxLength"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//RefSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//RefSchemaDefinition/ref"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//JsonSchema">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//JsonSchema/schema"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//JsonSchema/findSchemaByJsonPointer"
          body="try {&#xA;&#x9;return getSchema().findSchemaByJsonPointer(jsonPointer,0);&#xA;} catch (Exception e) {&#xA;&#x9;return null;&#xA;}">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//JsonSchema/findSchemaByJsonPointer/jsonPointer"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//KeySchemaPair">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//KeySchemaPair/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//KeySchemaPair/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContentMediaTypeSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ContentMediaTypeSchemaDefinition/contentMediaType"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExclusiveMinimumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ExclusiveMinimumSchemaDefinition/exclusiveMinimum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaSchemaDefinition/schema"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> ksp.getKey()==key).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PropertyNamesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PropertyNamesSchemaDefinition/propertyNames"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ArrayValue">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ArrayValue/value"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//Value"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TypesAnyOf2">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TypesAnyOf2/items"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//BooleanSchema">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//BooleanSchema/value"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer"
          body="if(currentIndex==jsonPointer.size()) {&#xA;&#x9;return this;&#xA;} else {&#xA;&#x9;return null;&#xA;}">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NonNegativeInteger">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NonNegativeInteger/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NonNegativeIntegerDefault0">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NonNegativeIntegerDefault0/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties/additionalProperties"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesProperties"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties/additionalProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf1">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf1/anyOf1"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf2">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf2/anyOf2"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf"/>
  </genPackages>
</genmodel:GenModel>
