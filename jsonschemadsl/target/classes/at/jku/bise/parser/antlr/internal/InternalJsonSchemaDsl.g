/*
 * generated by Xtext 2.23.0
 */
grammar InternalJsonSchemaDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package at.jku.bise.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.jku.bise.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.jku.bise.services.JsonSchemaDslGrammarAccess;

}

@parser::members {

 	private JsonSchemaDslGrammarAccess grammarAccess;

    public InternalJsonSchemaDslParser(TokenStream input, JsonSchemaDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "JsonSchema";
   	}

   	@Override
   	protected JsonSchemaDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleJsonSchema
entryRuleJsonSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonSchemaRule()); }
	iv_ruleJsonSchema=ruleJsonSchema
	{ $current=$iv_ruleJsonSchema.current; }
	EOF;

// Rule JsonSchema
ruleJsonSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonSchemaAccess().getJsonSchemaAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonSchemaAccess().getSchemaSchemaParserRuleCall_1_0());
				}
				lv_schema_1_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonSchemaRule());
					}
					set(
						$current,
						"schema",
						lv_schema_1_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	iv_ruleSchema=ruleSchema
	{ $current=$iv_ruleSchema.current; }
	EOF;

// Rule Schema
ruleSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSchemaAccess().getObjectSchemaParserRuleCall_0());
		}
		this_ObjectSchema_0=ruleObjectSchema
		{
			$current = $this_ObjectSchema_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSchemaAccess().getBooleanSchemaParserRuleCall_1());
		}
		this_BooleanSchema_1=ruleBooleanSchema
		{
			$current = $this_BooleanSchema_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKeywordDefinition
entryRuleKeywordDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeywordDefinitionRule()); }
	iv_ruleKeywordDefinition=ruleKeywordDefinition
	{ $current=$iv_ruleKeywordDefinition.current; }
	EOF;

// Rule KeywordDefinition
ruleKeywordDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getIdSchemaDefinitionParserRuleCall_0());
		}
		this_IdSchemaDefinition_0=ruleIdSchemaDefinition
		{
			$current = $this_IdSchemaDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getSchemaSchemaDefinitionParserRuleCall_1());
		}
		this_SchemaSchemaDefinition_1=ruleSchemaSchemaDefinition
		{
			$current = $this_SchemaSchemaDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getRefSchemaDefinitionParserRuleCall_2());
		}
		this_RefSchemaDefinition_2=ruleRefSchemaDefinition
		{
			$current = $this_RefSchemaDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getCommentSchemaDefinitionParserRuleCall_3());
		}
		this_CommentSchemaDefinition_3=ruleCommentSchemaDefinition
		{
			$current = $this_CommentSchemaDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getTitleSchemaDefinitionParserRuleCall_4());
		}
		this_TitleSchemaDefinition_4=ruleTitleSchemaDefinition
		{
			$current = $this_TitleSchemaDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getDescriptionSchemaDefinitionParserRuleCall_5());
		}
		this_DescriptionSchemaDefinition_5=ruleDescriptionSchemaDefinition
		{
			$current = $this_DescriptionSchemaDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getDefaultSchemaDefinitionParserRuleCall_6());
		}
		this_DefaultSchemaDefinition_6=ruleDefaultSchemaDefinition
		{
			$current = $this_DefaultSchemaDefinition_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getReadOnlySchemaDefinitionParserRuleCall_7());
		}
		this_ReadOnlySchemaDefinition_7=ruleReadOnlySchemaDefinition
		{
			$current = $this_ReadOnlySchemaDefinition_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getWriteOnlySchemaDefinitionParserRuleCall_8());
		}
		this_WriteOnlySchemaDefinition_8=ruleWriteOnlySchemaDefinition
		{
			$current = $this_WriteOnlySchemaDefinition_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getExamplesSchemaDefinitionParserRuleCall_9());
		}
		this_ExamplesSchemaDefinition_9=ruleExamplesSchemaDefinition
		{
			$current = $this_ExamplesSchemaDefinition_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMultipleOfSchemaDefinitionParserRuleCall_10());
		}
		this_MultipleOfSchemaDefinition_10=ruleMultipleOfSchemaDefinition
		{
			$current = $this_MultipleOfSchemaDefinition_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMaximumSchemaDefinitionParserRuleCall_11());
		}
		this_MaximumSchemaDefinition_11=ruleMaximumSchemaDefinition
		{
			$current = $this_MaximumSchemaDefinition_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getExclusiveMaximumSchemaDefinitionParserRuleCall_12());
		}
		this_ExclusiveMaximumSchemaDefinition_12=ruleExclusiveMaximumSchemaDefinition
		{
			$current = $this_ExclusiveMaximumSchemaDefinition_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMinimumSchemaDefinitionParserRuleCall_13());
		}
		this_MinimumSchemaDefinition_13=ruleMinimumSchemaDefinition
		{
			$current = $this_MinimumSchemaDefinition_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getExclusiveMinimumSchemaDefinitionParserRuleCall_14());
		}
		this_ExclusiveMinimumSchemaDefinition_14=ruleExclusiveMinimumSchemaDefinition
		{
			$current = $this_ExclusiveMinimumSchemaDefinition_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMaxLengthSchemaDefinitionParserRuleCall_15());
		}
		this_MaxLengthSchemaDefinition_15=ruleMaxLengthSchemaDefinition
		{
			$current = $this_MaxLengthSchemaDefinition_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMinLengthSchemaDefinitionParserRuleCall_16());
		}
		this_MinLengthSchemaDefinition_16=ruleMinLengthSchemaDefinition
		{
			$current = $this_MinLengthSchemaDefinition_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getPatternSchemaDefinitionParserRuleCall_17());
		}
		this_PatternSchemaDefinition_17=rulePatternSchemaDefinition
		{
			$current = $this_PatternSchemaDefinition_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getAdditionalItemsSchemaDefinitionParserRuleCall_18());
		}
		this_AdditionalItemsSchemaDefinition_18=ruleAdditionalItemsSchemaDefinition
		{
			$current = $this_AdditionalItemsSchemaDefinition_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getItemsSchemaDefinitionParserRuleCall_19());
		}
		this_ItemsSchemaDefinition_19=ruleItemsSchemaDefinition
		{
			$current = $this_ItemsSchemaDefinition_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMaxItemsSchemaDefinitionParserRuleCall_20());
		}
		this_MaxItemsSchemaDefinition_20=ruleMaxItemsSchemaDefinition
		{
			$current = $this_MaxItemsSchemaDefinition_20.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMinItemsSchemaDefinitionParserRuleCall_21());
		}
		this_MinItemsSchemaDefinition_21=ruleMinItemsSchemaDefinition
		{
			$current = $this_MinItemsSchemaDefinition_21.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getUniqueItemsSchemaDefinitionParserRuleCall_22());
		}
		this_UniqueItemsSchemaDefinition_22=ruleUniqueItemsSchemaDefinition
		{
			$current = $this_UniqueItemsSchemaDefinition_22.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getContainsSchemaDefinitionParserRuleCall_23());
		}
		this_ContainsSchemaDefinition_23=ruleContainsSchemaDefinition
		{
			$current = $this_ContainsSchemaDefinition_23.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMaxPropertiesSchemaDefinitionParserRuleCall_24());
		}
		this_MaxPropertiesSchemaDefinition_24=ruleMaxPropertiesSchemaDefinition
		{
			$current = $this_MaxPropertiesSchemaDefinition_24.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getMinPropertiesSchemaDefinitionParserRuleCall_25());
		}
		this_MinPropertiesSchemaDefinition_25=ruleMinPropertiesSchemaDefinition
		{
			$current = $this_MinPropertiesSchemaDefinition_25.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getRequiredSchemaDefinitionParserRuleCall_26());
		}
		this_RequiredSchemaDefinition_26=ruleRequiredSchemaDefinition
		{
			$current = $this_RequiredSchemaDefinition_26.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getAdditionalPropertiesSchemaDefinitionParserRuleCall_27());
		}
		this_AdditionalPropertiesSchemaDefinition_27=ruleAdditionalPropertiesSchemaDefinition
		{
			$current = $this_AdditionalPropertiesSchemaDefinition_27.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getDefinitionsSchemaDefinitionParserRuleCall_28());
		}
		this_DefinitionsSchemaDefinition_28=ruleDefinitionsSchemaDefinition
		{
			$current = $this_DefinitionsSchemaDefinition_28.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getPropertiesSchemaDefinitionParserRuleCall_29());
		}
		this_PropertiesSchemaDefinition_29=rulePropertiesSchemaDefinition
		{
			$current = $this_PropertiesSchemaDefinition_29.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getPatternPropertiesSchemaDefinitionParserRuleCall_30());
		}
		this_PatternPropertiesSchemaDefinition_30=rulePatternPropertiesSchemaDefinition
		{
			$current = $this_PatternPropertiesSchemaDefinition_30.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getPropertyNamesSchemaDefinitionParserRuleCall_31());
		}
		this_PropertyNamesSchemaDefinition_31=rulePropertyNamesSchemaDefinition
		{
			$current = $this_PropertyNamesSchemaDefinition_31.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getConstSchemaDefinitionParserRuleCall_32());
		}
		this_ConstSchemaDefinition_32=ruleConstSchemaDefinition
		{
			$current = $this_ConstSchemaDefinition_32.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getEnumSchemaDefinitionParserRuleCall_33());
		}
		this_EnumSchemaDefinition_33=ruleEnumSchemaDefinition
		{
			$current = $this_EnumSchemaDefinition_33.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getTypeSchemaDefinitionParserRuleCall_34());
		}
		this_TypeSchemaDefinition_34=ruleTypeSchemaDefinition
		{
			$current = $this_TypeSchemaDefinition_34.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getFormatSchemaDefinitionParserRuleCall_35());
		}
		this_FormatSchemaDefinition_35=ruleFormatSchemaDefinition
		{
			$current = $this_FormatSchemaDefinition_35.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getContentMediaTypeSchemaDefinitionParserRuleCall_36());
		}
		this_ContentMediaTypeSchemaDefinition_36=ruleContentMediaTypeSchemaDefinition
		{
			$current = $this_ContentMediaTypeSchemaDefinition_36.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getContentEncodingSchemaDefinitionParserRuleCall_37());
		}
		this_ContentEncodingSchemaDefinition_37=ruleContentEncodingSchemaDefinition
		{
			$current = $this_ContentEncodingSchemaDefinition_37.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getIfSchemaDefinitionParserRuleCall_38());
		}
		this_IfSchemaDefinition_38=ruleIfSchemaDefinition
		{
			$current = $this_IfSchemaDefinition_38.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getThenSchemaDefinitionParserRuleCall_39());
		}
		this_ThenSchemaDefinition_39=ruleThenSchemaDefinition
		{
			$current = $this_ThenSchemaDefinition_39.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getElseSchemaDefinitionParserRuleCall_40());
		}
		this_ElseSchemaDefinition_40=ruleElseSchemaDefinition
		{
			$current = $this_ElseSchemaDefinition_40.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getAllOfSchemaDefinitionParserRuleCall_41());
		}
		this_AllOfSchemaDefinition_41=ruleAllOfSchemaDefinition
		{
			$current = $this_AllOfSchemaDefinition_41.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getAnyOfSchemaDefinitionParserRuleCall_42());
		}
		this_AnyOfSchemaDefinition_42=ruleAnyOfSchemaDefinition
		{
			$current = $this_AnyOfSchemaDefinition_42.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getOneOfSchemaDefinitionParserRuleCall_43());
		}
		this_OneOfSchemaDefinition_43=ruleOneOfSchemaDefinition
		{
			$current = $this_OneOfSchemaDefinition_43.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getNotSchemaDefinitionParserRuleCall_44());
		}
		this_NotSchemaDefinition_44=ruleNotSchemaDefinition
		{
			$current = $this_NotSchemaDefinition_44.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getKeywordDefinitionAccess().getKeyValuePairParserRuleCall_45());
		}
		this_KeyValuePair_45=ruleKeyValuePair
		{
			$current = $this_KeyValuePair_45.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0());
		}
		this_IntegerValue_0=ruleIntegerValue
		{
			$current = $this_IntegerValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_1());
		}
		this_BooleanValue_1=ruleBooleanValue
		{
			$current = $this_BooleanValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNullValueParserRuleCall_2());
		}
		this_NullValue_2=ruleNullValue
		{
			$current = $this_NullValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getStringValueParserRuleCall_3());
		}
		this_StringValue_3=ruleStringValue
		{
			$current = $this_StringValue_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4());
		}
		this_ObjectValue_4=ruleObjectValue
		{
			$current = $this_ObjectValue_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNumberValueParserRuleCall_5());
		}
		this_NumberValue_5=ruleNumberValue
		{
			$current = $this_NumberValue_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getArrayValueParserRuleCall_6());
		}
		this_ArrayValue_6=ruleArrayValue
		{
			$current = $this_ArrayValue_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObjectSchema
entryRuleObjectSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectSchemaRule()); }
	iv_ruleObjectSchema=ruleObjectSchema
	{ $current=$iv_ruleObjectSchema.current; }
	EOF;

// Rule ObjectSchema
ruleObjectSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectSchemaAccess().getObjectSchemaAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectSchemaAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectSchemaAccess().getKeywordDefinitionKeywordDefinitionParserRuleCall_2_0_0());
					}
					lv_keywordDefinition_2_0=ruleKeywordDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectSchemaRule());
						}
						add(
							$current,
							"keywordDefinition",
							lv_keywordDefinition_2_0,
							"at.jku.bise.JsonSchemaDsl.KeywordDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getObjectSchemaAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObjectSchemaAccess().getKeywordDefinitionKeywordDefinitionParserRuleCall_2_1_1_0());
						}
						lv_keywordDefinition_4_0=ruleKeywordDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObjectSchemaRule());
							}
							add(
								$current,
								"keywordDefinition",
								lv_keywordDefinition_4_0,
								"at.jku.bise.JsonSchemaDsl.KeywordDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getObjectSchemaAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBooleanSchema
entryRuleBooleanSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSchemaRule()); }
	iv_ruleBooleanSchema=ruleBooleanSchema
	{ $current=$iv_ruleBooleanSchema.current; }
	EOF;

// Rule BooleanSchema
ruleBooleanSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanSchemaAccess().getValueEBooleanParserRuleCall_0());
			}
			lv_value_0_0=ruleEBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanSchemaRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EBoolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMaximumSchemaDefinition
entryRuleMaximumSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaximumSchemaDefinitionRule()); }
	iv_ruleMaximumSchemaDefinition=ruleMaximumSchemaDefinition
	{ $current=$iv_ruleMaximumSchemaDefinition.current; }
	EOF;

// Rule MaximumSchemaDefinition
ruleMaximumSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"maximum"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaximumSchemaDefinitionAccess().getMaximumKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaximumSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaximumSchemaDefinitionAccess().getMaximumEDoubleParserRuleCall_2_0());
				}
				lv_maximum_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaximumSchemaDefinitionRule());
					}
					set(
						$current,
						"maximum",
						lv_maximum_2_0,
						"at.jku.bise.JsonSchemaDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWriteOnlySchemaDefinition
entryRuleWriteOnlySchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWriteOnlySchemaDefinitionRule()); }
	iv_ruleWriteOnlySchemaDefinition=ruleWriteOnlySchemaDefinition
	{ $current=$iv_ruleWriteOnlySchemaDefinition.current; }
	EOF;

// Rule WriteOnlySchemaDefinition
ruleWriteOnlySchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"writeOnly"'
		{
			newLeafNode(otherlv_0, grammarAccess.getWriteOnlySchemaDefinitionAccess().getWriteOnlyKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getWriteOnlySchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWriteOnlySchemaDefinitionAccess().getWriteOnlyEBooleanParserRuleCall_2_0());
				}
				lv_writeOnly_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWriteOnlySchemaDefinitionRule());
					}
					set(
						$current,
						"writeOnly",
						lv_writeOnly_2_0,
						"at.jku.bise.JsonSchemaDsl.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommentSchemaDefinition
entryRuleCommentSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentSchemaDefinitionRule()); }
	iv_ruleCommentSchemaDefinition=ruleCommentSchemaDefinition
	{ $current=$iv_ruleCommentSchemaDefinition.current; }
	EOF;

// Rule CommentSchemaDefinition
ruleCommentSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"$comment"'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommentSchemaDefinitionAccess().getCommentKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommentSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommentSchemaDefinitionAccess().getCommentEStringParserRuleCall_2_0());
				}
				lv_comment_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommentSchemaDefinitionRule());
					}
					set(
						$current,
						"comment",
						lv_comment_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumSchemaDefinition
entryRuleEnumSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumSchemaDefinitionRule()); }
	iv_ruleEnumSchemaDefinition=ruleEnumSchemaDefinition
	{ $current=$iv_ruleEnumSchemaDefinition.current; }
	EOF;

// Rule EnumSchemaDefinition
ruleEnumSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumSchemaDefinitionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumSchemaDefinitionAccess().getItemsJsonDocumentParserRuleCall_1_0());
				}
				lv_items_1_0=ruleJsonDocument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumSchemaDefinitionRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"at.jku.bise.JsonSchemaDsl.JsonDocument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumSchemaDefinitionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumSchemaDefinitionAccess().getItemsJsonDocumentParserRuleCall_2_1_0());
					}
					lv_items_3_0=ruleJsonDocument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumSchemaDefinitionRule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"at.jku.bise.JsonSchemaDsl.JsonDocument");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumSchemaDefinitionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleUniqueItemsSchemaDefinition
entryRuleUniqueItemsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueItemsSchemaDefinitionRule()); }
	iv_ruleUniqueItemsSchemaDefinition=ruleUniqueItemsSchemaDefinition
	{ $current=$iv_ruleUniqueItemsSchemaDefinition.current; }
	EOF;

// Rule UniqueItemsSchemaDefinition
ruleUniqueItemsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"uniqueItems"'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniqueItemsSchemaDefinitionAccess().getUniqueItemsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getUniqueItemsSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueItemsSchemaDefinitionAccess().getUniqueItemsEBooleanParserRuleCall_2_0());
				}
				lv_uniqueItems_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"uniqueItems",
						lv_uniqueItems_2_0,
						"at.jku.bise.JsonSchemaDsl.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAnyOfSchemaDefinition
entryRuleAnyOfSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyOfSchemaDefinitionRule()); }
	iv_ruleAnyOfSchemaDefinition=ruleAnyOfSchemaDefinition
	{ $current=$iv_ruleAnyOfSchemaDefinition.current; }
	EOF;

// Rule AnyOfSchemaDefinition
ruleAnyOfSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"anyOf"'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnyOfSchemaDefinitionAccess().getAnyOfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnyOfSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnyOfSchemaDefinitionAccess().getAnyOfSchemaArrayParserRuleCall_2_0());
				}
				lv_anyOf_2_0=ruleSchemaArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnyOfSchemaDefinitionRule());
					}
					set(
						$current,
						"anyOf",
						lv_anyOf_2_0,
						"at.jku.bise.JsonSchemaDsl.SchemaArray");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTitleSchemaDefinition
entryRuleTitleSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleSchemaDefinitionRule()); }
	iv_ruleTitleSchemaDefinition=ruleTitleSchemaDefinition
	{ $current=$iv_ruleTitleSchemaDefinition.current; }
	EOF;

// Rule TitleSchemaDefinition
ruleTitleSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"title"'
		{
			newLeafNode(otherlv_0, grammarAccess.getTitleSchemaDefinitionAccess().getTitleKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTitleSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTitleSchemaDefinitionAccess().getTitleEStringParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTitleSchemaDefinitionRule());
					}
					set(
						$current,
						"title",
						lv_title_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleItemsSchemaDefinition
entryRuleItemsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemsSchemaDefinitionRule()); }
	iv_ruleItemsSchemaDefinition=ruleItemsSchemaDefinition
	{ $current=$iv_ruleItemsSchemaDefinition.current; }
	EOF;

// Rule ItemsSchemaDefinition
ruleItemsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getItemsSchemaDefinitionAccess().getItemsSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"items"'
		{
			newLeafNode(otherlv_1, grammarAccess.getItemsSchemaDefinitionAccess().getItemsKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getItemsSchemaDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemsSchemaDefinitionAccess().getItemsAnyOf1SchemaParserRuleCall_3_0());
				}
				lv_itemsAnyOf1_3_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"itemsAnyOf1",
						lv_itemsAnyOf1_3_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getItemsSchemaDefinitionAccess().getItemsAnyOf2SchemaArrayParserRuleCall_4_0());
				}
				lv_itemsAnyOf2_4_0=ruleSchemaArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"itemsAnyOf2",
						lv_itemsAnyOf2_4_0,
						"at.jku.bise.JsonSchemaDsl.SchemaArray");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDefaultSchemaDefinition
entryRuleDefaultSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultSchemaDefinitionRule()); }
	iv_ruleDefaultSchemaDefinition=ruleDefaultSchemaDefinition
	{ $current=$iv_ruleDefaultSchemaDefinition.current; }
	EOF;

// Rule DefaultSchemaDefinition
ruleDefaultSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"default"'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultSchemaDefinitionAccess().getDefaultKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefaultSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefaultSchemaDefinitionAccess().getDefaultJsonDocumentParserRuleCall_2_0());
				}
				lv_default_2_0=ruleJsonDocument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefaultSchemaDefinitionRule());
					}
					set(
						$current,
						"default",
						lv_default_2_0,
						"at.jku.bise.JsonSchemaDsl.JsonDocument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleThenSchemaDefinition
entryRuleThenSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenSchemaDefinitionRule()); }
	iv_ruleThenSchemaDefinition=ruleThenSchemaDefinition
	{ $current=$iv_ruleThenSchemaDefinition.current; }
	EOF;

// Rule ThenSchemaDefinition
ruleThenSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"then"'
		{
			newLeafNode(otherlv_0, grammarAccess.getThenSchemaDefinitionAccess().getThenKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getThenSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThenSchemaDefinitionAccess().getThenSchemaParserRuleCall_2_0());
				}
				lv_then_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThenSchemaDefinitionRule());
					}
					set(
						$current,
						"then",
						lv_then_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMinLengthSchemaDefinition
entryRuleMinLengthSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinLengthSchemaDefinitionRule()); }
	iv_ruleMinLengthSchemaDefinition=ruleMinLengthSchemaDefinition
	{ $current=$iv_ruleMinLengthSchemaDefinition.current; }
	EOF;

// Rule MinLengthSchemaDefinition
ruleMinLengthSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"minLength"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinLengthSchemaDefinitionAccess().getMinLengthKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinLengthSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinLengthSchemaDefinitionAccess().getMinLengthNonNegativeIntegerDefault0ParserRuleCall_2_0());
				}
				lv_minLength_2_0=ruleNonNegativeIntegerDefault0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinLengthSchemaDefinitionRule());
					}
					set(
						$current,
						"minLength",
						lv_minLength_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeIntegerDefault0");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDefinitionsSchemaDefinition
entryRuleDefinitionsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionsSchemaDefinitionRule()); }
	iv_ruleDefinitionsSchemaDefinition=ruleDefinitionsSchemaDefinition
	{ $current=$iv_ruleDefinitionsSchemaDefinition.current; }
	EOF;

// Rule DefinitionsSchemaDefinition
ruleDefinitionsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDefinitionsSchemaDefinitionAccess().getDefinitionsSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"definitions"'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefinitionsSchemaDefinitionAccess().getDefinitionsKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefinitionsSchemaDefinitionAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefinitionsSchemaDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDefinitionsSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_0_0());
					}
					lv_keySchemaPairs_4_0=ruleKeySchemaPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefinitionsSchemaDefinitionRule());
						}
						add(
							$current,
							"keySchemaPairs",
							lv_keySchemaPairs_4_0,
							"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getDefinitionsSchemaDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefinitionsSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_1_1_0());
						}
						lv_keySchemaPairs_6_0=ruleKeySchemaPair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefinitionsSchemaDefinitionRule());
							}
							add(
								$current,
								"keySchemaPairs",
								lv_keySchemaPairs_6_0,
								"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDefinitionsSchemaDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMinItemsSchemaDefinition
entryRuleMinItemsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinItemsSchemaDefinitionRule()); }
	iv_ruleMinItemsSchemaDefinition=ruleMinItemsSchemaDefinition
	{ $current=$iv_ruleMinItemsSchemaDefinition.current; }
	EOF;

// Rule MinItemsSchemaDefinition
ruleMinItemsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"minItems"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinItemsSchemaDefinitionAccess().getMinItemsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinItemsSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinItemsSchemaDefinitionAccess().getMinItemsNonNegativeIntegerDefault0ParserRuleCall_2_0());
				}
				lv_minItems_2_0=ruleNonNegativeIntegerDefault0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"minItems",
						lv_minItems_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeIntegerDefault0");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOneOfSchemaDefinition
entryRuleOneOfSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneOfSchemaDefinitionRule()); }
	iv_ruleOneOfSchemaDefinition=ruleOneOfSchemaDefinition
	{ $current=$iv_ruleOneOfSchemaDefinition.current; }
	EOF;

// Rule OneOfSchemaDefinition
ruleOneOfSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"oneOf"'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneOfSchemaDefinitionAccess().getOneOfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOneOfSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneOfSchemaDefinitionAccess().getOneOfSchemaArrayParserRuleCall_2_0());
				}
				lv_oneOf_2_0=ruleSchemaArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneOfSchemaDefinitionRule());
					}
					set(
						$current,
						"oneOf",
						lv_oneOf_2_0,
						"at.jku.bise.JsonSchemaDsl.SchemaArray");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMaxPropertiesSchemaDefinition
entryRuleMaxPropertiesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxPropertiesSchemaDefinitionRule()); }
	iv_ruleMaxPropertiesSchemaDefinition=ruleMaxPropertiesSchemaDefinition
	{ $current=$iv_ruleMaxPropertiesSchemaDefinition.current; }
	EOF;

// Rule MaxPropertiesSchemaDefinition
ruleMaxPropertiesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"maxProperties"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxPropertiesSchemaDefinitionAccess().getMaxPropertiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxPropertiesSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxPropertiesSchemaDefinitionAccess().getMaxPropertiesNonNegativeIntegerParserRuleCall_2_0());
				}
				lv_maxProperties_2_0=ruleNonNegativeInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxPropertiesSchemaDefinitionRule());
					}
					set(
						$current,
						"maxProperties",
						lv_maxProperties_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMinimumSchemaDefinition
entryRuleMinimumSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinimumSchemaDefinitionRule()); }
	iv_ruleMinimumSchemaDefinition=ruleMinimumSchemaDefinition
	{ $current=$iv_ruleMinimumSchemaDefinition.current; }
	EOF;

// Rule MinimumSchemaDefinition
ruleMinimumSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"minimum"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinimumSchemaDefinitionAccess().getMinimumKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinimumSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinimumSchemaDefinitionAccess().getMinimumEDoubleParserRuleCall_2_0());
				}
				lv_minimum_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinimumSchemaDefinitionRule());
					}
					set(
						$current,
						"minimum",
						lv_minimum_2_0,
						"at.jku.bise.JsonSchemaDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMaxItemsSchemaDefinition
entryRuleMaxItemsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxItemsSchemaDefinitionRule()); }
	iv_ruleMaxItemsSchemaDefinition=ruleMaxItemsSchemaDefinition
	{ $current=$iv_ruleMaxItemsSchemaDefinition.current; }
	EOF;

// Rule MaxItemsSchemaDefinition
ruleMaxItemsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"maxItems"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxItemsSchemaDefinitionAccess().getMaxItemsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxItemsSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxItemsSchemaDefinitionAccess().getMaxItemsNonNegativeIntegerParserRuleCall_2_0());
				}
				lv_maxItems_2_0=ruleNonNegativeInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"maxItems",
						lv_maxItems_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFormatSchemaDefinition
entryRuleFormatSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormatSchemaDefinitionRule()); }
	iv_ruleFormatSchemaDefinition=ruleFormatSchemaDefinition
	{ $current=$iv_ruleFormatSchemaDefinition.current; }
	EOF;

// Rule FormatSchemaDefinition
ruleFormatSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"format"'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormatSchemaDefinitionAccess().getFormatKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFormatSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormatSchemaDefinitionAccess().getFormatEStringParserRuleCall_2_0());
				}
				lv_format_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormatSchemaDefinitionRule());
					}
					set(
						$current,
						"format",
						lv_format_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReadOnlySchemaDefinition
entryRuleReadOnlySchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadOnlySchemaDefinitionRule()); }
	iv_ruleReadOnlySchemaDefinition=ruleReadOnlySchemaDefinition
	{ $current=$iv_ruleReadOnlySchemaDefinition.current; }
	EOF;

// Rule ReadOnlySchemaDefinition
ruleReadOnlySchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"readOnly"'
		{
			newLeafNode(otherlv_0, grammarAccess.getReadOnlySchemaDefinitionAccess().getReadOnlyKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReadOnlySchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReadOnlySchemaDefinitionAccess().getReadOnlyEBooleanParserRuleCall_2_0());
				}
				lv_readOnly_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReadOnlySchemaDefinitionRule());
					}
					set(
						$current,
						"readOnly",
						lv_readOnly_2_0,
						"at.jku.bise.JsonSchemaDsl.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSchemaDefinition
entryRuleTypeSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSchemaDefinitionRule()); }
	iv_ruleTypeSchemaDefinition=ruleTypeSchemaDefinition
	{ $current=$iv_ruleTypeSchemaDefinition.current; }
	EOF;

// Rule TypeSchemaDefinition
ruleTypeSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeSchemaDefinitionAccess().getTypeSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"type"'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeSchemaDefinitionAccess().getTypeKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeSchemaDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSchemaDefinitionAccess().getTypeAnyOf1SimpleTypesEnumRuleCall_3_0());
				}
				lv_typeAnyOf1_3_0=ruleSimpleTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSchemaDefinitionRule());
					}
					set(
						$current,
						"typeAnyOf1",
						lv_typeAnyOf1_3_0,
						"at.jku.bise.JsonSchemaDsl.SimpleTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSchemaDefinitionAccess().getTypesAnyOf2TypesAnyOf2ParserRuleCall_4_0());
				}
				lv_typesAnyOf2_4_0=ruleTypesAnyOf2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSchemaDefinitionRule());
					}
					set(
						$current,
						"typesAnyOf2",
						lv_typesAnyOf2_4_0,
						"at.jku.bise.JsonSchemaDsl.TypesAnyOf2");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAdditionalPropertiesSchemaDefinition
entryRuleAdditionalPropertiesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionalPropertiesSchemaDefinitionRule()); }
	iv_ruleAdditionalPropertiesSchemaDefinition=ruleAdditionalPropertiesSchemaDefinition
	{ $current=$iv_ruleAdditionalPropertiesSchemaDefinition.current; }
	EOF;

// Rule AdditionalPropertiesSchemaDefinition
ruleAdditionalPropertiesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"additionalProperties"'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdditionalPropertiesSchemaDefinitionAccess().getAdditionalPropertiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAdditionalPropertiesSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditionalPropertiesSchemaDefinitionAccess().getAdditionalPropertiesSchemaParserRuleCall_2_0());
				}
				lv_additionalProperties_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditionalPropertiesSchemaDefinitionRule());
					}
					set(
						$current,
						"additionalProperties",
						lv_additionalProperties_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElseSchemaDefinition
entryRuleElseSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseSchemaDefinitionRule()); }
	iv_ruleElseSchemaDefinition=ruleElseSchemaDefinition
	{ $current=$iv_ruleElseSchemaDefinition.current; }
	EOF;

// Rule ElseSchemaDefinition
ruleElseSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"else"'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseSchemaDefinitionAccess().getElseKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseSchemaDefinitionAccess().getElseSchemaParserRuleCall_2_0());
				}
				lv_else_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseSchemaDefinitionRule());
					}
					set(
						$current,
						"else",
						lv_else_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdSchemaDefinition
entryRuleIdSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdSchemaDefinitionRule()); }
	iv_ruleIdSchemaDefinition=ruleIdSchemaDefinition
	{ $current=$iv_ruleIdSchemaDefinition.current; }
	EOF;

// Rule IdSchemaDefinition
ruleIdSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"$id"'
		{
			newLeafNode(otherlv_0, grammarAccess.getIdSchemaDefinitionAccess().getIdKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getIdSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdSchemaDefinitionAccess().getIdEStringParserRuleCall_2_0());
				}
				lv_id_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdSchemaDefinitionRule());
					}
					set(
						$current,
						"id",
						lv_id_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstSchemaDefinition
entryRuleConstSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstSchemaDefinitionRule()); }
	iv_ruleConstSchemaDefinition=ruleConstSchemaDefinition
	{ $current=$iv_ruleConstSchemaDefinition.current; }
	EOF;

// Rule ConstSchemaDefinition
ruleConstSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"const"'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstSchemaDefinitionAccess().getConstKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstSchemaDefinitionAccess().getConstJsonDocumentParserRuleCall_2_0());
				}
				lv_const_2_0=ruleJsonDocument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstSchemaDefinitionRule());
					}
					set(
						$current,
						"const",
						lv_const_2_0,
						"at.jku.bise.JsonSchemaDsl.JsonDocument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRequiredSchemaDefinition
entryRuleRequiredSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequiredSchemaDefinitionRule()); }
	iv_ruleRequiredSchemaDefinition=ruleRequiredSchemaDefinition
	{ $current=$iv_ruleRequiredSchemaDefinition.current; }
	EOF;

// Rule RequiredSchemaDefinition
ruleRequiredSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"required"'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequiredSchemaDefinitionAccess().getRequiredKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequiredSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequiredSchemaDefinitionAccess().getRequiredStringArrayParserRuleCall_2_0());
				}
				lv_required_2_0=ruleStringArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequiredSchemaDefinitionRule());
					}
					set(
						$current,
						"required",
						lv_required_2_0,
						"at.jku.bise.JsonSchemaDsl.StringArray");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDescriptionSchemaDefinition
entryRuleDescriptionSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionSchemaDefinitionRule()); }
	iv_ruleDescriptionSchemaDefinition=ruleDescriptionSchemaDefinition
	{ $current=$iv_ruleDescriptionSchemaDefinition.current; }
	EOF;

// Rule DescriptionSchemaDefinition
ruleDescriptionSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"description"'
		{
			newLeafNode(otherlv_0, grammarAccess.getDescriptionSchemaDefinitionAccess().getDescriptionKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDescriptionSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDescriptionSchemaDefinitionAccess().getDescriptionEStringParserRuleCall_2_0());
				}
				lv_description_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescriptionSchemaDefinitionRule());
					}
					set(
						$current,
						"description",
						lv_description_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMinPropertiesSchemaDefinition
entryRuleMinPropertiesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinPropertiesSchemaDefinitionRule()); }
	iv_ruleMinPropertiesSchemaDefinition=ruleMinPropertiesSchemaDefinition
	{ $current=$iv_ruleMinPropertiesSchemaDefinition.current; }
	EOF;

// Rule MinPropertiesSchemaDefinition
ruleMinPropertiesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"minProperties"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinPropertiesSchemaDefinitionAccess().getMinPropertiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinPropertiesSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinPropertiesSchemaDefinitionAccess().getMinPropertiesNonNegativeIntegerDefault0ParserRuleCall_2_0());
				}
				lv_minProperties_2_0=ruleNonNegativeIntegerDefault0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinPropertiesSchemaDefinitionRule());
					}
					set(
						$current,
						"minProperties",
						lv_minProperties_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeIntegerDefault0");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePatternPropertiesSchemaDefinition
entryRulePatternPropertiesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternPropertiesSchemaDefinitionRule()); }
	iv_rulePatternPropertiesSchemaDefinition=rulePatternPropertiesSchemaDefinition
	{ $current=$iv_rulePatternPropertiesSchemaDefinition.current; }
	EOF;

// Rule PatternPropertiesSchemaDefinition
rulePatternPropertiesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getPatternPropertiesSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"patternProperties"'
		{
			newLeafNode(otherlv_1, grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getPatternPropertiesKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_0_0());
					}
					lv_keySchemaPairs_4_0=ruleKeySchemaPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternPropertiesSchemaDefinitionRule());
						}
						add(
							$current,
							"keySchemaPairs",
							lv_keySchemaPairs_4_0,
							"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_1_1_0());
						}
						lv_keySchemaPairs_6_0=ruleKeySchemaPair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternPropertiesSchemaDefinitionRule());
							}
							add(
								$current,
								"keySchemaPairs",
								lv_keySchemaPairs_6_0,
								"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPatternPropertiesSchemaDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAdditionalItemsSchemaDefinition
entryRuleAdditionalItemsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionalItemsSchemaDefinitionRule()); }
	iv_ruleAdditionalItemsSchemaDefinition=ruleAdditionalItemsSchemaDefinition
	{ $current=$iv_ruleAdditionalItemsSchemaDefinition.current; }
	EOF;

// Rule AdditionalItemsSchemaDefinition
ruleAdditionalItemsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"additionalItems"'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdditionalItemsSchemaDefinitionAccess().getAdditionalItemsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAdditionalItemsSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditionalItemsSchemaDefinitionAccess().getAdditionalItemsSchemaParserRuleCall_2_0());
				}
				lv_additionalItems_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditionalItemsSchemaDefinitionRule());
					}
					set(
						$current,
						"additionalItems",
						lv_additionalItems_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_STRING
				{
					newLeafNode(lv_key_0_0, grammarAccess.getKeyValuePairAccess().getKeySTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyValuePairRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"at.jku.bise.JsonSchemaDsl.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyValuePairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"at.jku.bise.JsonSchemaDsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExamplesSchemaDefinition
entryRuleExamplesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExamplesSchemaDefinitionRule()); }
	iv_ruleExamplesSchemaDefinition=ruleExamplesSchemaDefinition
	{ $current=$iv_ruleExamplesSchemaDefinition.current; }
	EOF;

// Rule ExamplesSchemaDefinition
ruleExamplesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExamplesSchemaDefinitionAccess().getExamplesSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"examples"'
		{
			newLeafNode(otherlv_1, grammarAccess.getExamplesSchemaDefinitionAccess().getExamplesKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getExamplesSchemaDefinitionAccess().getColonKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getExamplesSchemaDefinitionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExamplesSchemaDefinitionAccess().getExamplesJsonDocumentParserRuleCall_4_0_0());
					}
					lv_examples_4_0=ruleJsonDocument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExamplesSchemaDefinitionRule());
						}
						add(
							$current,
							"examples",
							lv_examples_4_0,
							"at.jku.bise.JsonSchemaDsl.JsonDocument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getExamplesSchemaDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExamplesSchemaDefinitionAccess().getExamplesJsonDocumentParserRuleCall_4_1_1_0());
						}
						lv_examples_6_0=ruleJsonDocument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExamplesSchemaDefinitionRule());
							}
							add(
								$current,
								"examples",
								lv_examples_6_0,
								"at.jku.bise.JsonSchemaDsl.JsonDocument");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getExamplesSchemaDefinitionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIfSchemaDefinition
entryRuleIfSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfSchemaDefinitionRule()); }
	iv_ruleIfSchemaDefinition=ruleIfSchemaDefinition
	{ $current=$iv_ruleIfSchemaDefinition.current; }
	EOF;

// Rule IfSchemaDefinition
ruleIfSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"if"'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfSchemaDefinitionAccess().getIfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfSchemaDefinitionAccess().getIfSchemaParserRuleCall_2_0());
				}
				lv_if_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfSchemaDefinitionRule());
					}
					set(
						$current,
						"if",
						lv_if_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAllOfSchemaDefinition
entryRuleAllOfSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllOfSchemaDefinitionRule()); }
	iv_ruleAllOfSchemaDefinition=ruleAllOfSchemaDefinition
	{ $current=$iv_ruleAllOfSchemaDefinition.current; }
	EOF;

// Rule AllOfSchemaDefinition
ruleAllOfSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"allOf"'
		{
			newLeafNode(otherlv_0, grammarAccess.getAllOfSchemaDefinitionAccess().getAllOfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAllOfSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAllOfSchemaDefinitionAccess().getAllOfSchemaArrayParserRuleCall_2_0());
				}
				lv_allOf_2_0=ruleSchemaArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAllOfSchemaDefinitionRule());
					}
					set(
						$current,
						"allOf",
						lv_allOf_2_0,
						"at.jku.bise.JsonSchemaDsl.SchemaArray");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContentEncodingSchemaDefinition
entryRuleContentEncodingSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentEncodingSchemaDefinitionRule()); }
	iv_ruleContentEncodingSchemaDefinition=ruleContentEncodingSchemaDefinition
	{ $current=$iv_ruleContentEncodingSchemaDefinition.current; }
	EOF;

// Rule ContentEncodingSchemaDefinition
ruleContentEncodingSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"contentEncoding"'
		{
			newLeafNode(otherlv_0, grammarAccess.getContentEncodingSchemaDefinitionAccess().getContentEncodingKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentEncodingSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContentEncodingSchemaDefinitionAccess().getContentEncodingEStringParserRuleCall_2_0());
				}
				lv_contentEncoding_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentEncodingSchemaDefinitionRule());
					}
					set(
						$current,
						"contentEncoding",
						lv_contentEncoding_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultipleOfSchemaDefinition
entryRuleMultipleOfSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleOfSchemaDefinitionRule()); }
	iv_ruleMultipleOfSchemaDefinition=ruleMultipleOfSchemaDefinition
	{ $current=$iv_ruleMultipleOfSchemaDefinition.current; }
	EOF;

// Rule MultipleOfSchemaDefinition
ruleMultipleOfSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"multipleOf"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleOfSchemaDefinitionAccess().getMultipleOfKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultipleOfSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultipleOfSchemaDefinitionAccess().getMultipleOfEDoubleParserRuleCall_2_0());
				}
				lv_multipleOf_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultipleOfSchemaDefinitionRule());
					}
					set(
						$current,
						"multipleOf",
						lv_multipleOf_2_0,
						"at.jku.bise.JsonSchemaDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePatternSchemaDefinition
entryRulePatternSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternSchemaDefinitionRule()); }
	iv_rulePatternSchemaDefinition=rulePatternSchemaDefinition
	{ $current=$iv_rulePatternSchemaDefinition.current; }
	EOF;

// Rule PatternSchemaDefinition
rulePatternSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"pattern"'
		{
			newLeafNode(otherlv_0, grammarAccess.getPatternSchemaDefinitionAccess().getPatternKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPatternSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternSchemaDefinitionAccess().getPatternEStringParserRuleCall_2_0());
				}
				lv_pattern_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternSchemaDefinitionRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContainsSchemaDefinition
entryRuleContainsSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainsSchemaDefinitionRule()); }
	iv_ruleContainsSchemaDefinition=ruleContainsSchemaDefinition
	{ $current=$iv_ruleContainsSchemaDefinition.current; }
	EOF;

// Rule ContainsSchemaDefinition
ruleContainsSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"contains"'
		{
			newLeafNode(otherlv_0, grammarAccess.getContainsSchemaDefinitionAccess().getContainsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getContainsSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContainsSchemaDefinitionAccess().getContainsSchemaParserRuleCall_2_0());
				}
				lv_contains_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainsSchemaDefinitionRule());
					}
					set(
						$current,
						"contains",
						lv_contains_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNotSchemaDefinition
entryRuleNotSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotSchemaDefinitionRule()); }
	iv_ruleNotSchemaDefinition=ruleNotSchemaDefinition
	{ $current=$iv_ruleNotSchemaDefinition.current; }
	EOF;

// Rule NotSchemaDefinition
ruleNotSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"not"'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotSchemaDefinitionAccess().getNotKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotSchemaDefinitionAccess().getNotSchemaParserRuleCall_2_0());
				}
				lv_not_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotSchemaDefinitionRule());
					}
					set(
						$current,
						"not",
						lv_not_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExclusiveMaximumSchemaDefinition
entryRuleExclusiveMaximumSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveMaximumSchemaDefinitionRule()); }
	iv_ruleExclusiveMaximumSchemaDefinition=ruleExclusiveMaximumSchemaDefinition
	{ $current=$iv_ruleExclusiveMaximumSchemaDefinition.current; }
	EOF;

// Rule ExclusiveMaximumSchemaDefinition
ruleExclusiveMaximumSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"exclusiveMaximum"'
		{
			newLeafNode(otherlv_0, grammarAccess.getExclusiveMaximumSchemaDefinitionAccess().getExclusiveMaximumKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExclusiveMaximumSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExclusiveMaximumSchemaDefinitionAccess().getExclusiveMaximumEDoubleParserRuleCall_2_0());
				}
				lv_exclusiveMaximum_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveMaximumSchemaDefinitionRule());
					}
					set(
						$current,
						"exclusiveMaximum",
						lv_exclusiveMaximum_2_0,
						"at.jku.bise.JsonSchemaDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMaxLengthSchemaDefinition
entryRuleMaxLengthSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxLengthSchemaDefinitionRule()); }
	iv_ruleMaxLengthSchemaDefinition=ruleMaxLengthSchemaDefinition
	{ $current=$iv_ruleMaxLengthSchemaDefinition.current; }
	EOF;

// Rule MaxLengthSchemaDefinition
ruleMaxLengthSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"maxLength"'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaxLengthSchemaDefinitionAccess().getMaxLengthKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaxLengthSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxLengthSchemaDefinitionAccess().getMaxLengthNonNegativeIntegerParserRuleCall_2_0());
				}
				lv_maxLength_2_0=ruleNonNegativeInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxLengthSchemaDefinitionRule());
					}
					set(
						$current,
						"maxLength",
						lv_maxLength_2_0,
						"at.jku.bise.JsonSchemaDsl.NonNegativeInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRefSchemaDefinition
entryRuleRefSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefSchemaDefinitionRule()); }
	iv_ruleRefSchemaDefinition=ruleRefSchemaDefinition
	{ $current=$iv_ruleRefSchemaDefinition.current; }
	EOF;

// Rule RefSchemaDefinition
ruleRefSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"$ref"'
		{
			newLeafNode(otherlv_0, grammarAccess.getRefSchemaDefinitionAccess().getRefKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRefSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRefSchemaDefinitionAccess().getRefEStringParserRuleCall_2_0());
				}
				lv_ref_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefSchemaDefinitionRule());
					}
					set(
						$current,
						"ref",
						lv_ref_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContentMediaTypeSchemaDefinition
entryRuleContentMediaTypeSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentMediaTypeSchemaDefinitionRule()); }
	iv_ruleContentMediaTypeSchemaDefinition=ruleContentMediaTypeSchemaDefinition
	{ $current=$iv_ruleContentMediaTypeSchemaDefinition.current; }
	EOF;

// Rule ContentMediaTypeSchemaDefinition
ruleContentMediaTypeSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"contentMediaType"'
		{
			newLeafNode(otherlv_0, grammarAccess.getContentMediaTypeSchemaDefinitionAccess().getContentMediaTypeKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentMediaTypeSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContentMediaTypeSchemaDefinitionAccess().getContentMediaTypeEStringParserRuleCall_2_0());
				}
				lv_contentMediaType_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentMediaTypeSchemaDefinitionRule());
					}
					set(
						$current,
						"contentMediaType",
						lv_contentMediaType_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExclusiveMinimumSchemaDefinition
entryRuleExclusiveMinimumSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveMinimumSchemaDefinitionRule()); }
	iv_ruleExclusiveMinimumSchemaDefinition=ruleExclusiveMinimumSchemaDefinition
	{ $current=$iv_ruleExclusiveMinimumSchemaDefinition.current; }
	EOF;

// Rule ExclusiveMinimumSchemaDefinition
ruleExclusiveMinimumSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"exclusiveMinimum"'
		{
			newLeafNode(otherlv_0, grammarAccess.getExclusiveMinimumSchemaDefinitionAccess().getExclusiveMinimumKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExclusiveMinimumSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExclusiveMinimumSchemaDefinitionAccess().getExclusiveMinimumEDoubleParserRuleCall_2_0());
				}
				lv_exclusiveMinimum_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveMinimumSchemaDefinitionRule());
					}
					set(
						$current,
						"exclusiveMinimum",
						lv_exclusiveMinimum_2_0,
						"at.jku.bise.JsonSchemaDsl.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSchemaSchemaDefinition
entryRuleSchemaSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaSchemaDefinitionRule()); }
	iv_ruleSchemaSchemaDefinition=ruleSchemaSchemaDefinition
	{ $current=$iv_ruleSchemaSchemaDefinition.current; }
	EOF;

// Rule SchemaSchemaDefinition
ruleSchemaSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"$schema"'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaSchemaDefinitionAccess().getSchemaKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaSchemaDefinitionAccess().getSchemaEStringParserRuleCall_2_0());
				}
				lv_schema_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaSchemaDefinitionRule());
					}
					set(
						$current,
						"schema",
						lv_schema_2_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePropertiesSchemaDefinition
entryRulePropertiesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertiesSchemaDefinitionRule()); }
	iv_rulePropertiesSchemaDefinition=rulePropertiesSchemaDefinition
	{ $current=$iv_rulePropertiesSchemaDefinition.current; }
	EOF;

// Rule PropertiesSchemaDefinition
rulePropertiesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertiesSchemaDefinitionAccess().getPropertiesSchemaDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='"properties"'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertiesSchemaDefinitionAccess().getPropertiesKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertiesSchemaDefinitionAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPropertiesSchemaDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertiesSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_0_0());
					}
					lv_keySchemaPairs_4_0=ruleKeySchemaPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertiesSchemaDefinitionRule());
						}
						add(
							$current,
							"keySchemaPairs",
							lv_keySchemaPairs_4_0,
							"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getPropertiesSchemaDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropertiesSchemaDefinitionAccess().getKeySchemaPairsKeySchemaPairParserRuleCall_4_1_1_0());
						}
						lv_keySchemaPairs_6_0=ruleKeySchemaPair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropertiesSchemaDefinitionRule());
							}
							add(
								$current,
								"keySchemaPairs",
								lv_keySchemaPairs_6_0,
								"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPropertiesSchemaDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePropertyNamesSchemaDefinition
entryRulePropertyNamesSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyNamesSchemaDefinitionRule()); }
	iv_rulePropertyNamesSchemaDefinition=rulePropertyNamesSchemaDefinition
	{ $current=$iv_rulePropertyNamesSchemaDefinition.current; }
	EOF;

// Rule PropertyNamesSchemaDefinition
rulePropertyNamesSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"propertyNames"'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyNamesSchemaDefinitionAccess().getPropertyNamesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyNamesSchemaDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyNamesSchemaDefinitionAccess().getPropertyNamesSchemaParserRuleCall_2_0());
				}
				lv_propertyNames_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyNamesSchemaDefinitionRule());
					}
					set(
						$current,
						"propertyNames",
						lv_propertyNames_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_JSON_NUMBER_0=RULE_JSON_NUMBER
	{
		$current.merge(this_JSON_NUMBER_0);
	}
	{
		newLeafNode(this_JSON_NUMBER_0, grammarAccess.getEDoubleAccess().getJSON_NUMBERTerminalRuleCall());
	}
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall());
	}
	this_VALID_STRING_0=ruleVALID_STRING
	{
		$current.merge(this_VALID_STRING_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleJsonDocument
entryRuleJsonDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonDocumentRule()); }
	iv_ruleJsonDocument=ruleJsonDocument
	{ $current=$iv_ruleJsonDocument.current; }
	EOF;

// Rule JsonDocument
ruleJsonDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0());
			}
			lv_value_0_0=ruleValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getJsonDocumentRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.Value");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); }
	iv_ruleIntegerValue=ruleIntegerValue
	{ $current=$iv_ruleIntegerValue.current; }
	EOF;

// Rule IntegerValue
ruleIntegerValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getIntegerValueAccess().getValueEIntParserRuleCall_0());
			}
			lv_value_0_0=ruleEInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getIntegerValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current; }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0());
			}
			lv_value_0_0=ruleEBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EBoolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNullValue
entryRuleNullValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	iv_ruleNullValue=ruleNullValue
	{ $current=$iv_ruleNullValue.current; }
	EOF;

// Rule NullValue
ruleNullValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullValueAccess().getNullValueAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringValueAccess().getValueVALID_STRINGParserRuleCall_0());
			}
			lv_value_0_0=ruleVALID_STRING
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.VALID_STRING");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleObjectValue
entryRuleObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueRule()); }
	iv_ruleObjectValue=ruleObjectValue
	{ $current=$iv_ruleObjectValue.current; }
	EOF;

// Rule ObjectValue
ruleObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectValueAccess().getObjectValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0());
					}
					lv_keyvaluepair_2_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectValueRule());
						}
						add(
							$current,
							"keyvaluepair",
							lv_keyvaluepair_2_0,
							"at.jku.bise.JsonSchemaDsl.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0());
						}
						lv_keyvaluepair_4_0=ruleKeyValuePair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObjectValueRule());
							}
							add(
								$current,
								"keyvaluepair",
								lv_keyvaluepair_4_0,
								"at.jku.bise.JsonSchemaDsl.KeyValuePair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNumberValue
entryRuleNumberValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberValueRule()); }
	iv_ruleNumberValue=ruleNumberValue
	{ $current=$iv_ruleNumberValue.current; }
	EOF;

// Rule NumberValue
ruleNumberValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0());
			}
			lv_value_0_0=ruleEDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumberValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EDouble");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArrayValue
entryRuleArrayValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayValueRule()); }
	iv_ruleArrayValue=ruleArrayValue
	{ $current=$iv_ruleArrayValue.current; }
	EOF;

// Rule ArrayValue
ruleArrayValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayValueAccess().getArrayValueAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0());
					}
					lv_value_2_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayValueRule());
						}
						add(
							$current,
							"value",
							lv_value_2_0,
							"at.jku.bise.JsonSchemaDsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0());
						}
						lv_value_4_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayValueRule());
							}
							add(
								$current,
								"value",
								lv_value_4_0,
								"at.jku.bise.JsonSchemaDsl.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSchemaArray
entryRuleSchemaArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaArrayRule()); }
	iv_ruleSchemaArray=ruleSchemaArray
	{ $current=$iv_ruleSchemaArray.current; }
	EOF;

// Rule SchemaArray
ruleSchemaArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaArrayAccess().getItemsSchemaParserRuleCall_1_0());
				}
				lv_items_1_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaArrayRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSchemaArrayAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchemaArrayAccess().getItemsSchemaParserRuleCall_2_1_0());
					}
					lv_items_3_0=ruleSchema
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchemaArrayRule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"at.jku.bise.JsonSchemaDsl.Schema");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getSchemaArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNonNegativeIntegerDefault0
entryRuleNonNegativeIntegerDefault0 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonNegativeIntegerDefault0Rule()); }
	iv_ruleNonNegativeIntegerDefault0=ruleNonNegativeIntegerDefault0
	{ $current=$iv_ruleNonNegativeIntegerDefault0.current; }
	EOF;

// Rule NonNegativeIntegerDefault0
ruleNonNegativeIntegerDefault0 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNonNegativeIntegerDefault0Access().getValueEIntParserRuleCall_0());
			}
			lv_value_0_0=ruleEInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNonNegativeIntegerDefault0Rule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleKeySchemaPair
entryRuleKeySchemaPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeySchemaPairRule()); }
	iv_ruleKeySchemaPair=ruleKeySchemaPair
	{ $current=$iv_ruleKeySchemaPair.current; }
	EOF;

// Rule KeySchemaPair
ruleKeySchemaPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeySchemaPairAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeySchemaPairRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKeySchemaPairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeySchemaPairAccess().getValueSchemaParserRuleCall_2_0());
				}
				lv_value_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeySchemaPairRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"at.jku.bise.JsonSchemaDsl.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNonNegativeInteger
entryRuleNonNegativeInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonNegativeIntegerRule()); }
	iv_ruleNonNegativeInteger=ruleNonNegativeInteger
	{ $current=$iv_ruleNonNegativeInteger.current; }
	EOF;

// Rule NonNegativeInteger
ruleNonNegativeInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNonNegativeIntegerAccess().getValueEIntParserRuleCall_0());
			}
			lv_value_0_0=ruleEInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNonNegativeIntegerRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"at.jku.bise.JsonSchemaDsl.EInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypesAnyOf2
entryRuleTypesAnyOf2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypesAnyOf2Rule()); }
	iv_ruleTypesAnyOf2=ruleTypesAnyOf2
	{ $current=$iv_ruleTypesAnyOf2.current; }
	EOF;

// Rule TypesAnyOf2
ruleTypesAnyOf2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getTypesAnyOf2Access().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypesAnyOf2Access().getItemsSimpleTypesEnumRuleCall_1_0());
				}
				lv_items_1_0=ruleSimpleTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypesAnyOf2Rule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"at.jku.bise.JsonSchemaDsl.SimpleTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTypesAnyOf2Access().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypesAnyOf2Access().getItemsSimpleTypesEnumRuleCall_2_1_0());
					}
					lv_items_3_0=ruleSimpleTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypesAnyOf2Rule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"at.jku.bise.JsonSchemaDsl.SimpleTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypesAnyOf2Access().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDependenciesAnyOf
entryRuleDependenciesAnyOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependenciesAnyOfRule()); }
	iv_ruleDependenciesAnyOf=ruleDependenciesAnyOf
	{ $current=$iv_ruleDependenciesAnyOf.current; }
	EOF;

// Rule DependenciesAnyOf
ruleDependenciesAnyOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDependenciesAnyOfAccess().getDependenciesAnyOfAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDependenciesAnyOfAccess().getDependenciesAnyOf2KeyStringArrayPairParserRuleCall_1_0());
				}
				lv_dependenciesAnyOf2_1_0=ruleKeyStringArrayPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependenciesAnyOfRule());
					}
					set(
						$current,
						"dependenciesAnyOf2",
						lv_dependenciesAnyOf2_1_0,
						"at.jku.bise.JsonSchemaDsl.KeyStringArrayPair");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDependenciesAnyOfAccess().getDependenciesAnyOf1KeySchemaPairParserRuleCall_2_0());
				}
				lv_dependenciesAnyOf1_2_0=ruleKeySchemaPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependenciesAnyOfRule());
					}
					set(
						$current,
						"dependenciesAnyOf1",
						lv_dependenciesAnyOf1_2_0,
						"at.jku.bise.JsonSchemaDsl.KeySchemaPair");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleKeyStringArrayPair
entryRuleKeyStringArrayPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyStringArrayPairRule()); }
	iv_ruleKeyStringArrayPair=ruleKeyStringArrayPair
	{ $current=$iv_ruleKeyStringArrayPair.current; }
	EOF;

// Rule KeyStringArrayPair
ruleKeyStringArrayPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyStringArrayPairAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyStringArrayPairRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"at.jku.bise.JsonSchemaDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyStringArrayPairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyStringArrayPairAccess().getValueStringArrayParserRuleCall_2_0());
				}
				lv_value_2_0=ruleStringArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyStringArrayPairRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"at.jku.bise.JsonSchemaDsl.StringArray");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringArray
entryRuleStringArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringArrayRule()); }
	iv_ruleStringArray=ruleStringArray
	{ $current=$iv_ruleStringArray.current; }
	EOF;

// Rule StringArray
ruleStringArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStringArrayAccess().getStringArrayAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getStringArrayAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStringArrayAccess().getValuesEStringParserRuleCall_2_0_0());
					}
					lv_values_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_2_0,
							"at.jku.bise.JsonSchemaDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getStringArrayAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStringArrayAccess().getValuesEStringParserRuleCall_2_1_1_0());
						}
						lv_values_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringArrayRule());
							}
							add(
								$current,
								"values",
								lv_values_4_0,
								"at.jku.bise.JsonSchemaDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getStringArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleVALID_STRING
entryRuleVALID_STRING returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALID_STRINGRule()); }
	iv_ruleVALID_STRING=ruleVALID_STRING
	{ $current=$iv_ruleVALID_STRING.current.getText(); }
	EOF;

// Rule VALID_STRING
ruleVALID_STRING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getVALID_STRINGAccess().getKEYWORDParserRuleCall_1());
		}
		this_KEYWORD_1=ruleKEYWORD
		{
			$current.merge(this_KEYWORD_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKEYWORD
entryRuleKEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKEYWORDRule()); }
	iv_ruleKEYWORD=ruleKEYWORD
	{ $current=$iv_ruleKEYWORD.current.getText(); }
	EOF;

// Rule KEYWORD
ruleKEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"$id"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getIdKeyword_0());
		}
		    |
		kw='"$schema"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getSchemaKeyword_1());
		}
		    |
		kw='"$ref"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getRefKeyword_2());
		}
		    |
		kw='"$comment"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getCommentKeyword_3());
		}
		    |
		kw='"title"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTitleKeyword_4());
		}
		    |
		kw='"description"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDescriptionKeyword_5());
		}
		    |
		kw='"default"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDefaultKeyword_6());
		}
		    |
		kw='"readOnly"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getReadOnlyKeyword_7());
		}
		    |
		kw='"writeOnly"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getWriteOnlyKeyword_8());
		}
		    |
		kw='"examples"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getExamplesKeyword_9());
		}
		    |
		kw='"multipleOf"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMultipleOfKeyword_10());
		}
		    |
		kw='"maximum"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaximumKeyword_11());
		}
		    |
		kw='"exclusiveMaximum"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getExclusiveMaximumKeyword_12());
		}
		    |
		kw='"minimum"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinimumKeyword_13());
		}
		    |
		kw='"exclusiveMinimum"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getExclusiveMinimumKeyword_14());
		}
		    |
		kw='"maxLength"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxLengthKeyword_15());
		}
		    |
		kw='"minLength"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinLengthKeyword_16());
		}
		    |
		kw='"pattern"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getPatternKeyword_17());
		}
		    |
		kw='"additionalItems"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAdditionalItemsKeyword_18());
		}
		    |
		kw='"items"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getItemsKeyword_19());
		}
		    |
		kw='"maxItems"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxItemsKeyword_20());
		}
		    |
		kw='"minItems"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinItemsKeyword_21());
		}
		    |
		kw='"uniqueItems"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getUniqueItemsKeyword_22());
		}
		    |
		kw='"contains"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getContainsKeyword_23());
		}
		    |
		kw='"maxProperties"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMaxPropertiesKeyword_24());
		}
		    |
		kw='"minProperties"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getMinPropertiesKeyword_25());
		}
		    |
		kw='"required"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getRequiredKeyword_26());
		}
		    |
		kw='"additionalProperties"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAdditionalPropertiesKeyword_27());
		}
		    |
		kw='"definitions"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDefinitionsKeyword_28());
		}
		    |
		kw='"properties"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getPropertiesKeyword_29());
		}
		    |
		kw='"patternProperties"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getPatternPropertiesKeyword_30());
		}
		    |
		kw='"dependencies"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getDependenciesKeyword_31());
		}
		    |
		kw='"propertyNames"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getPropertyNamesKeyword_32());
		}
		    |
		kw='"const"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getConstKeyword_33());
		}
		    |
		kw='"enum"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getEnumKeyword_34());
		}
		    |
		kw='"type"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getTypeKeyword_35());
		}
		    |
		kw='"format"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getFormatKeyword_36());
		}
		    |
		kw='"contentMediaType"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getContentMediaTypeKeyword_37());
		}
		    |
		kw='"contentEncoding"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getContentEncodingKeyword_38());
		}
		    |
		kw='"if"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getIfKeyword_39());
		}
		    |
		kw='"then"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getThenKeyword_40());
		}
		    |
		kw='"else"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getElseKeyword_41());
		}
		    |
		kw='"allOf"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAllOfKeyword_42());
		}
		    |
		kw='"anyOf"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getAnyOfKeyword_43());
		}
		    |
		kw='"oneOf"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getOneOfKeyword_44());
		}
		    |
		kw='"not"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getNotKeyword_45());
		}
	)
;

// Rule SimpleTypes
ruleSimpleTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='"array"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getArrayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimpleTypesAccess().getArrayEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='"boolean"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimpleTypesAccess().getBooleanEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='"integer"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getIntegerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSimpleTypesAccess().getIntegerEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='"null"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getNullEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSimpleTypesAccess().getNullEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='"number"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getNumberEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSimpleTypesAccess().getNumberEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='"object"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getObjectEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getSimpleTypesAccess().getObjectEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='"string"'
			{
				$current = grammarAccess.getSimpleTypesAccess().getStringEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getSimpleTypesAccess().getStringEnumLiteralDeclaration_6());
			}
		)
	)
;

RULE_JSON_NUMBER : '-'? ('0'|'1'..'9' ('0'..'9')*) ('.' ('0'..'9')+)? (('E'|'e') ('+'|'-') ('0'..'9')+)?;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
